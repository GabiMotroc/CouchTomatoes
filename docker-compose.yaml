x-base: &base
  restart: unless-stopped
  networks:
    - media_network

x-user: &user
  <<: *base
  environment:
    - PUID=${USER_ID}
    - PGID=${GROUP_ID}
    - TZ=${TIMEZONE}

services:
  otel-collector:
    <<: *base
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "8888:8888"  # Debugging
      - "9464:9464"  # Prometheus Exporter

  prometheus:
    <<: *base
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    <<: *base
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change this in production!
    volumes:
      - ./config/grafana:/var/lib/grafana

  plex:
    <<: *user
    image: lscr.io/linuxserver/plex:latest
    container_name: ${PLEX_NAME}
    environment:
      - VERSION=docker
    volumes:
      - ./config/plex:/config
      - ${MOVIES_DIR}:/movies
      - ${SHOWS_DIR}:/tv
    ports:
      - ${PLEX_PORT}:${PLEX_PORT}/tcp
      - 32469:32469/udp

  qbittorrent:
    <<: *user
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: ${QBITTORRENT_NAME}
    ports:
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT}  # Web UI
      - 6881:6881  # Torrent port
      - 6881:6881/udp
    environment:
      - WEBUI_PORT=${QBITTORRENT_PORT}
    volumes:
      - ./config/qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads

  radarr:
    <<: *user
    image: lscr.io/linuxserver/radarr:latest
    container_name: ${RADARR_NAME}
    ports:
      - ${RADARR_PORT}:${RADARR_PORT}
    volumes:
      - ./config/radarr:/config
      - ${MOVIES_DIR}:/movies
      - ${DOWNLOADS_DIR}:/downloads
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${RADARR_NAME}.${DOMAIN}:${RADARR_PORT}/ping" ]
      interval: 30s
      retries: 10

  sonarr:
    <<: *user
    image: lscr.io/linuxserver/sonarr:latest
    container_name: ${SONARR_NAME}
    ports:
      - ${SONARR_PORT}:${SONARR_PORT}
    volumes:
      - ./config/sonarr:/config
      - ${SHOWS_DIR}:/tv
      - ${DOWNLOADS_DIR}:/downloads
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${SONARR_NAME}.${DOMAIN}:${SONARR_PORT}/ping" ]
      interval: 30s
      retries: 10

  prowlarr:
    <<: *user
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: ${PROWLARR_NAME}
    ports:
      - ${PROWLARR_PORT}:${PROWLARR_PORT}
    volumes:
      - ./config/prowlarr:/config
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${PROWLARR_NAME}.${DOMAIN}:${PROWLARR_PORT}/ping" ]
      interval: 30s
      retries: 10

  overseerr:
    <<: *user
    image: sctx/overseerr:latest
    container_name: ${OVERSEERR_NAME}
    environment:
      - LOG_LEVEL=debug
      - PORT=${OVERSEERR_PORT} #optional
      - RADARR_API_KEY=${RADARR_API_KEY}
      - RADARR_URL=https://radarr.local  # No need for ports
      - SONARR_API_KEY=${SONARR_API_KEY}
      - SONARR_URL=https://sonarr.local
      - PLEX_URL=https://plex.local
      - PLEX_TOKEN=${PLEX_TOKEN}
      - AUTH_METHOD=plex
    ports:
      - ${OVERSEERR_PORT}:${OVERSEERR_PORT}
    volumes:
      - ./config/overseerr:/app/config

  jellyfin:
    <<: *user
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: ${JELLYFIN_NAME}
    volumes:
      - ./config/jellyfin:/config
      - ${SHOWS_DIR}:/data/tvshows
      - ${MOVIES_DIR}:/data/movies
    ports:
      - ${JELLYFIN_PORT}:${JELLYFIN_PORT}

  emby:
    <<: *user
    image: lscr.io/linuxserver/emby:latest
    container_name: ${EMBY_NAME}
    volumes:
      - ./config/emby:/config
      - ${SHOWS_DIR}:/data/tvshows
      - ${MOVIES_DIR}:/data/movies
    ports:
      - ${EMBY_PORT}:${EMBY_INTERNAL_PORT}

  nginx:
    <<: *base
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    volumes:
      - ./config/nginx/default.conf.template:/etc/nginx/templates/default.conf.template
    depends_on:
      - plex
      - qbittorrent
      - radarr
      - sonarr
      - prowlarr
      - overseerr
      - jellyfin
      - emby

networks:
  media_network:
    driver: bridge