version: "3.9"

services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: ${PLEX_NAME}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - VERSION=docker
    volumes:
      - ./config/plex:/config
      - ${MOVIES_DIR}:/movies
      - ${SHOWS_DIR}:/tv
    restart: unless-stopped
    ports:
      - ${PLEX_PORT}:${PLEX_PORT}/tcp
      - 32469:32469/udp
    networks:
      - media_network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: ${QBITTORRENT_NAME}
    ports:
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT}  # Web UI
      - 6881:6881  # Torrent port
      - 6881:6881/udp
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=${QBITTORRENT_PORT}
    volumes:
      - ./config/qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads
    restart: unless-stopped
    networks:
      - media_network

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: ${RADARR_NAME}
    ports:
      - ${RADARR_PORT}:${RADARR_PORT}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/radarr:/config
      - ${MOVIES_DIR}:/movies
      - ${DOWNLOADS_DIR}:/downloads
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${RADARR_NAME}.${DOMAIN}:${RADARR_PORT}/ping" ]
      interval: 30s
      retries: 10
    restart: unless-stopped
    networks:
      - media_network

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: ${SONARR_NAME}
    ports:
      - ${SONARR_PORT}:${SONARR_PORT}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/sonarr:/config
      - ${SHOWS_DIR}:/tv
      - ${DOWNLOADS_DIR}:/downloads
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${SONARR_NAME}.${DOMAIN}:${SONARR_PORT}/ping" ]
      interval: 30s
      retries: 10
    restart: unless-stopped
    networks:
      - media_network

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: ${PROWLARR_NAME}
    ports:
      - ${PROWLARR_PORT}:${PROWLARR_PORT}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/prowlarr:/config
    healthcheck:
      test: [ "CMD", "curl", "--fail", "${PROWLARR_NAME}.${DOMAIN}:${PROWLARR_PORT}/ping" ]
      interval: 30s
      retries: 10
    restart: unless-stopped
    networks:
      - media_network

  overseerr:
    image: sctx/overseerr:latest
    container_name: ${OVERSEERR_NAME}
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Tokyo
      - PORT=${OVERSEERR_PORT} #optional
      - RADARR_API_KEY=${RADARR_API_KEY}
      - RADARR_URL=https://radarr.local  # No need for ports
      - SONARR_API_KEY=${SONARR_API_KEY}
      - SONARR_URL=https://sonarr.local
      - PLEX_URL=https://plex.local
      - PLEX_TOKEN=${PLEX_TOKEN}
      - AUTH_METHOD=plex
    ports:
      - ${OVERSEERR_PORT}:${OVERSEERR_PORT}
    volumes:
      - ./config/overseerr:/app/config
    restart: unless-stopped
    networks:
      - media_network

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: ${JELLYFIN_NAME}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/jellyfin:/config
      - ${SHOWS_DIR}:/data/tvshows
      - ${MOVIES_DIR}:/data/movies
    ports:
      - ${JELLYFIN_PORT}:8096
    restart: unless-stopped
    networks:
      - media_network

  emby:
    image: lscr.io/linuxserver/emby:latest
    container_name: ${EMBY_NAME}
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/emby:/config
      - ${SHOWS_DIR}:/data/tvshows
      - ${MOVIES_DIR}:/data/movies
    ports:
      - ${EMBY_PORT}:8096
    restart: unless-stopped
    networks:
      - media_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    volumes:
      - ./config/nginx/default.conf.template:/etc/nginx/templates/default.conf.template
    depends_on:
      - plex
      - qbittorrent
      - radarr
      - sonarr
      - prowlarr
      - overseerr
      - jellyfin
      - emby
    networks:
      - media_network


networks:
  media_network:
    driver: bridge